---
- name: Ensure that cluster name is an a templatable state
  set_fact:
    safe_aurora_cluster_name: "{{ aurora_cluster_name | regex_replace(' ', '_') }}"
    aurora_replicated_log_node: "{{ aurora_schedulers.split(',')[0] }}"
  tags:
    - aurora

- name: Ensure that the Aurora /var/run directory exists
  file:
    path: /var/run/aurora
    state: directory
    recurse: yes
    mode: 0775
  tags:
    - aurora

- name: Ensure that the Aurora directories exist
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  with_items:
    - "{{ aurora_bin_dir }}/{{ safe_aurora_cluster_name }}"
    - "{{ aurora_log_dir }}/{{ safe_aurora_cluster_name }}"
    - "{{ aurora_conf_dir }}/{{ safe_aurora_cluster_name }}"
    - "{{ aurora_state_dir }}/{{ safe_aurora_cluster_name }}"
    - "{{ aurora_state_dir }}/{{ safe_aurora_cluster_name }}/{{ aurora_backup_path }}"
    - "{{ aurora_lib_dir }}/{{ aurora_version }}"
  tags:
    - aurora

- name: Download Aurora scheduler
  get_url:
    url: "{{ aurora_mirror_base }}/{{ aurora_version }}/aurora-scheduler-{{ aurora_version }}.zip"
    dest: "{{ aurora_lib_dir }}/{{ aurora_version }}/aurora.zip"
  register: aurora_download
  tags:
    - aurora

- name: Unzip Aurora archive
  shell: "unzip {{ aurora_lib_dir }}/{{ aurora_version }}/aurora.zip"
  args:
    chdir: "{{ aurora_lib_dir }}/{{ aurora_version }}"
    creates: "{{ aurora_lib_dir }}/{{ aurora_version }}/aurora-scheduler-{{ aurora_version }}/bin/aurora-scheduler"
  tags:
    - aurora

- name: Template Aurora ZooKeeper quorum file
  template:
    src: zk.j2
    dest: "{{ aurora_conf_dir }}/{{ safe_aurora_cluster_name }}/zk"
  tags:
    - aurora
    - aurora_config

- name: Template Aurora cluster-specific startup script
  template:
    src: aurora-startup.sh.j2
    dest: "{{ aurora_bin_dir }}/{{ safe_aurora_cluster_name }}/startup"
    mode: 0755
  tags:
    - aurora
    - aurora_config

- name: Template Aurora cluster-specific init script
  template:
    src: aurora-control.sh.j2
    dest: "{{ aurora_bin_dir }}/{{ safe_aurora_cluster_name }}/control"
    mode: 0755
  tags:
    - aurora
    - aurora_config

- name: Setup a site-specific Aurora Monit configuration
  template:
    src: aurora.monit.j2
    dest: "/etc/monit.d/aurora-scheduler"
  register: aurora_monit
  notify:
    - Reload Monit
  tags:
    - aurora
    - aurora_config

- name: Ensure that the Aurora replicated log has been initialized
  command: "mesos-log initialize --path='{{ aurora_state_dir }}/{{ safe_aurora_cluster_name }}/{{ aurora_native_log_path }}'"
  args:
    creates: "{{ aurora_state_dir }}/{{ safe_aurora_cluster_name }}/{{ aurora_native_log_path }}"
  delegate_to: "{{ aurora_replicated_log_node }}"
  tags:
    - aurora

- name: Ensure that the Aurora service is running
  shell: "/usr/bin/aurora/{{ safe_aurora_cluster_name }}/control start"
  args:
    creates: "{{ aurora_state_dir }}/{{ safe_aurora_cluster_name }}/scheduler.pid"
  tags:
    - aurora

- name: Ensure that Monit is loaded with latest configuration
  service:
    name: monit
    state: reloaded
  when: aurora_monit.changed
  tags:
    - aurora
    - aurora_config

- name: Wait for Monit to get its act together
  pause:
    seconds: 5
  when: aurora_monit.changed
  tags:
    - aurora
    - aurora_config

- name: Ensure that Aurora is monitored by Monit
  monit:
    name: "aurora-{{ safe_aurora_cluster_name }}"
    state: monitored
  tags:
    - aurora
    - aurora_config
