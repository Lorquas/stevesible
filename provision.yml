---
- name: Request and kickstart new instance from Linode
  hosts: localhost
  tasks:
    - name: Get Linode API key from ~/.chube
      local_action: shell grep api_key ~/.chube | cut -d':' -f 2 | xargs
      register: linode_api_key

    - name: Generate a random number
      local_action: shell od -An -N4 -D < /dev/urandom | xargs
      register: random_number

    - name: "Request and kickstart new {{ lookup('env', 'ANSIBLE_GROUP') }} instance"
      local_action:
        module: linode
        api_key: "{{ linode_api_key.stdout }}"
        name: "{{ lookup('env', 'ANSIBLE_GROUP') }}_{{ random_number.stdout }}"
        linode_id: "{{ random_number.stdout }}"
        plan: 1
        datacenter: 4
        display_group: "{{ lookup('env', 'ANSIBLE_GROUP') }}_{{ random_number.stdout }}"
        distribution: 123
        ssh_pub_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        swap: 512
        wait: yes
        wait_timeout: 600
        state: present

- name: Bootstrap node with initial packages
  hosts: "{{ lookup('env', 'ANSIBLE_GROUP') }}_{{ random_number.stdout }}"
  user: root
  roles:
    - bootstrap
  tasks:
    - name: "Add new node to Ansible group {{ lookup('env', 'ANSIBLE_GROUP') }}"
      add_host:
        name: "{{ inventory_hostname }}"
        groups: "{{ lookup('env', 'ANSIBLE_GROUP') }}"

- name: "Run playbook for Ansible group {{ lookup('env', 'ANSIBLE_GROUP') }}"
  hosts: localhost
  tasks:
    - name: "Run playbook for Ansible group {{ lookup('env', 'ANSIBLE_GROUP') }}"
      local_action: "shell ./play {{ lookup('env', 'ANSIBLE_GROUP') }}.yml"

- name: "Promote new machine into {{ lookup('env', 'ANSIBLE_GROUP') }} role"
  hosts: localhost
  tasks:
    - name: "Change new instance's display group to {{ lookup('env', 'ANSIBLE_GROUP') }}"
      local_action:
        module: linode
        api_key: "{{ linode_api_key.stdout }}"
        linode_id: '{{ random_number.stdout }}'
        display_group: "{{ lookup('env', 'ANSIBLE_GROUP') }}"
