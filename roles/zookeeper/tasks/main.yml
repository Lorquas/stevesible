---
- name: Ensure that ZooKeeper site name is templatable
  set_fact:
    safe_zookeeper_site_name: "{{ zookeeper_site_name | regex_replace(' ', '_') }}"
  tags:
    - zookeeper

- name: Download ZooKeeper release tarball
  get_url:
    url: "{{ zookeeper_apache_mirror_base }}/zookeeper/zookeeper-{{ zookeeper_version }}/zookeeper-{{ zookeeper_version }}.tar.gz"
    dest: "{{ zookeeper_source_dir }}/zookeeper-{{ zookeeper_version }}.tar.gz"
  register: zookeeper_download
  tags:
    - zookeeper

- name: Untar ZooKeeper release tarball
  command: "tar xzf {{ zookeeper_source_dir }}/zookeeper-{{ zookeeper_version }}.tar.gz"
  args:
    chdir: "{{ zookeeper_source_dir }}"
    creates: "{{ zookeeper_source_dir }}/zookeeper-{{ zookeeper_version }}"
  when: zookeeper_download.changed
  tags:
    - zookeeper

- name: Create ZooKeeper user's group
  group:
    name: "{{ zookeeper_group }}"
    system: yes
  tags:
    - zookeeper

- name: Create ZooKeeper user
  user:
    name: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    home: "{{ zookeeper_state_dir }}/zookeeper/{{ safe_zookeeper_site_name }}"
    createhome: no
    system: yes
  tags:
    - zookeeper

- name: Ensure that the ZooKeeper configuration directory exists
  file:
    path: /etc/zookeeper
    state: directory
    group: "{{ zookeeper_group }}"
    mode: 0755
  tags:
    - zookeeper

- name: Ensure that the ZooKeeper /var/run directory exists for PID file creation
  file:
    path: /var/run/zookeeper
    state: directory
    recurse: yes
    group: "{{ zookeeper_group }}"
    mode: 0775
  tags:
    - zookeeper

- name: Ensure that the site-specific ZooKeeper state directory exists
  file:
    path: "{{ zookeeper_state_dir }}/zookeeper/{{ safe_zookeeper_site_name }}"
    state: directory
    recurse: yes
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  tags:
    - zookeeper

- name: Ensure that the ZooKeeper myid file reflects the correct ID of the server
  template:
    src: myid.j2
    dest: "{{ zookeeper_state_dir }}/zookeeper/{{ safe_zookeeper_site_name }}/myid"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  tags:
    - zookeeper
    - zookeeper_config

- name: Ensure that the site-specific ZooKeeper log directory exists
  file:
    path: "{{ zookeeper_log_dir }}/{{ safe_zookeeper_site_name }}"
    state: directory
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  tags:
    - zookeeper

- name: Template a site-specific ZooKeeper server startup script
  template:
    src: zkServer.j2
    dest: "/usr/bin/zkServer-{{ safe_zookeeper_site_name }}"
    owner: root
    group: root
    mode: 0755
  tags:
    - zookeeper
    - zookeeper_config

- name: Template a site-specific ZooKeeper configuration
  template:
    src: zoo.cfg.j2
    dest: "/etc/zookeeper/{{ safe_zookeeper_site_name }}.cfg"
  tags:
    - zookeeper
    - zookeeper_config

- name: Ensure that ZooKeeper service is running
  shell: "/usr/bin/zkServer-{{ safe_zookeeper_site_name }} start /etc/zookeeper/{{ safe_zookeeper_site_name }}.cfg && sleep 30"
  args:
    chdir: "{{ zookeeper_state_dir }}/zookeeper/{{ safe_zookeeper_site_name }}"
    creates: "/var/run/zookeeper/{{ safe_zookeeper_site_name }}.pid"
  sudo: yes
  sudo_user: "{{ zookeeper_user }}"
  tags:
    - zookeeper
    - zookeeper_config

- name: Setup a site-specific ZooKeeper Monit configuration
  template:
    src: zookeeper.monit.j2
    dest: "/etc/monit.d/zookeeper-{{ safe_zookeeper_site_name }}"
  register: zookeeeper_monit
  notify:
    - Reload Monit
  tags:
    - zookeeper
    - zookeeper_config

- name: Ensure that Monit is reloaded
  service:
    name: monit
    state: reloaded
  when: zookeeeper_monit.changed
  tags:
    - zookeeper
    - zookeeper_config

- name: Wait for Monit to get its act together
  pause:
    seconds: 5
  when: zookeeeper_monit.changed
  tags:
    - zookeeper
    - zookeeper_config

- name: Ensure that the site-specific ZooKeeper is monitored via Monit
  monit:
    name: "zookeeper-{{ safe_zookeeper_site_name }}"
    state: monitored
  tags:
    - zookeeper
    - zookeeper_config

- name: Write a site-specific ZooKeeper logrotate
  template:
    src: zookeeper.logrotate.j2
    dest: "/etc/logrotate.d/zookeeper-{{ safe_zookeeper_site_name }}"
    owner: root
    group: root
    mode: 0644
  tags:
    - zookeeper
    - zookeeper_config
