---
- name: Get Linode API key from ~/.chube
  local_action: shell grep api_key ~/.chube | cut -d':' -f 2 | xargs
  register: linode_api_key

- name: Generate a random number
  local_action: shell od -An -N4 -D < /dev/urandom | xargs
  register: random_number

- name: Generate a new root password
  local_action: shell openssl rand -base64 64
  register: root_password

- name: "Request and kickstart new {{ linode_display_group }} instance"
  local_action:
    module: linode_stevesible
    api_key: "{{ linode_api_key.stdout }}"
    name: "{{ linode_display_group }}_{{ random_number.stdout }}"
    plan: "{{ linode_plan_id }}"
    distribution: "{{ linode_distribution_id }}"
    datacenter: "{{ linode_datacenter_id }}"
    password: "{{ root_password.stdout }}"
    display_group: "{{ linode_display_group }}_{{ random_number.stdout }}"
    ssh_pub_key: "{{ linode_ssh_pubkey }}"
    swap: "{{ linode_swap_mb }}"
    wait: yes
    wait_timeout: "{{ linode_provision_wait_secs }}"
    state: present
  register: new_node

- name: Run bootstrap script for new node
  local_action: "shell ./bootstrap {{ linode_display_group }}_{{ random_number.stdout }}"

- name: "Change new instance's display group to {{ lookup('env', 'ANSIBLE_GROUP') }}"
  local_action:
    module: linode_stevesible
    api_key: "{{ linode_api_key.stdout }}"
    display_group: "{{ linode_display_group }}"
    name: "{{ linode_display_group }}_{{ random_number.stdout }}"
    linode_id: "{{ new_node.instance.id }}"
    plan: "{{ linode_plan_id }}"
    distribution: "{{ linode_distribution_id }}"
    datacenter: "{{ linode_datacenter_id }}"
    password: "{{ root_password.stdout }}"
    ssh_pub_key: "{{ linode_ssh_pubkey }}"
    swap: "{{ linode_swap_mb }}"
    state: present
