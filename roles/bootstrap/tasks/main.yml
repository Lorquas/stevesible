---
- name: Generate a new base user password
  local_action: "shell openssl rand -base64 64 | tr -cd '[:alnum:]'"
  register: base_user_password
  when: bootstrap_create_base_user
  tags:
    - bootstrap

- name: Set hostname (if requested)
  hostname:
    name: "{{ bootstrap_set_hostname }}"
  when: bootstrap_set_hostname != ''
  tags:
    - bootstrap
    - system_update

- name: Format requested volume (if requested)
  filesystem:
    fstype: ext4
    dev: "{{ bootstrap_format_ebs_volume }}"
  when: bootstrap_format_ebs_volume != ''

- name: Install bootstrap packages
  yum:
    name: "{{ item }}"
    state: present
  with_items: bootstrap_packages
  tags:
    - bootstrap

- name: Ensure that all packages are up2date
  yum:
    name: "*"
    state: latest
  tags:
    - bootstrap
    - system_update

- name: Establish MOTD
  template:
    src: motd.j2
    dest: /etc/motd
    owner: root
    group: root
    mode: 0644
  tags:
    - bootstrap

- name: Add sshd monit config
  template:
    src: sshd.monit.j2
    dest: /etc/monit.d/sshd.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload Monit
  tags:
    - bootstrap

- name: Add ferm conf directory
  file:
    path: /etc/ferm
    owner: root
    group: root
    mode: 0700
    state: directory
  tags:
    - bootstrap

- name: Set iptables configuration
  template:
    src: ferm.conf.j2
    dest: /etc/ferm/ferm.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload iptables configuration
  tags:
    - bootstrap

- name: Create initial user
  user:
    name: "{{ base_user }}"
    password: "{{ base_user_password.stdout }}"
    shell: /bin/zsh
  when: bootstrap_create_base_user
  tags:
    - bootstrap

- name: Create initial user's .ssh directory
  file:
    path: "/home/{{ base_user }}/.ssh"
    owner: "{{ base_user }}"
    group: "{{ base_user }}"
    mode: 0700
    state: directory
  when: bootstrap_create_base_user
  tags:
    - bootstrap

- name: Add initial user's authorized keys
  authorized_key:
    user: "{{ base_user }}"
    key: "{{ item }}"
    state: present
  with_items: authorized_keys
  tags:
    - bootstrap

- name: Make SSHD configuration sane
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: 0600
  notify:
    - Restart sshd monit
  tags:
    - bootstrap

- name: Clone oh-my-zsh repo for initial user
  remote_user: "{{ base_user }}"
  git:
    repo: https://github.com/robbyrussell/oh-my-zsh.git
    dest: "/home/{{ base_user }}/.oh-my-zsh"
  when: bootstrap_create_base_user
  tags:
    - bootstrap

- name: Deploy .zshrc
  template:
    src: zshrc.j2
    dest: "/home/{{ base_user }}/.zshrc"
    owner: "{{ base_user }}"
    group: "{{ base_group }}"
  when: bootstrap_create_base_user
  tags:
    - bootstrap

- name: Configure sudoers to allow for sudoable user
  lineinfile:
    dest: /etc/sudoers
    backup: yes
    state: present
    regexp: "^%{{ base_user }}"
    insertafter: "^# %wheel"
    line: "%{{ base_user }} ALL=(ALL) NOPASSWD: ALL"
  when: bootstrap_create_base_user
  tags:
    - bootstrap

- name: Configure sudoers to allow for non-tty sudo
  lineinfile:
    dest: /etc/sudoers
    backup: yes
    state: absent
    regexp: "^Defaults.*requiretty"
  when: bootstrap_create_base_user
  tags:
    - bootstrap

- name: Add Postfix monit config
  template:
    src: postfix.monit.j2
    dest: /etc/monit.d/postfix.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - Reload Monit
  tags:
    - bootstrap

- name: Ensure that Postfix service is running
  service:
    name: postfix
    state: started
    enabled: yes
  tags:
    - bootstrap

- name: Configure daily logwatch e-mails
  lineinfile:
    dest: /etc/cron.daily/0logwatch
    regexp: "^    logwatch"
    line: "    logwatch --output mail --mailto {{ logwatch_email }} --detail high"
    state: present
    create: yes
  tags:
    - bootstrap

- name: Make the default screenrc suck less
  template:
    src: screenrc.j2
    dest: /etc/screenrc
    owner: root
    group: root
    mode: 0644
  tags:
    - bootstrap

- name: use alternatives to configure jdk 1.8 java
  alternatives:
    name: java
    path: /usr/lib/jvm/java-1.8.0-openjdk/bin/java
    link: /usr/bin/java
  tags:
    - bootstrap

- name: use alternatives to configure jdk 1.8 javac
  alternatives:
    name: javac
    path: /usr/lib/jvm/java-1.8.0-openjdk/bin/javac
    link: /usr/bin/javac
  tags:
    - bootstrap
