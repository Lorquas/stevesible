---
- name: Ensure that cluster name is an a templatable state
  set_fact:
    safe_aurora_cluster_name: "{{ aurora_cluster_name | regex_replace(' ', '_') }}"
  tags:
    - aurora

- name: Ensure that the Aurora /var/run directory exists
  file:
    path: /var/run/aurora
    state: directory
    recurse: yes
    mode: 0775
  tags:
    - aurora

- name: Ensure that the Aurora log directory exists
  file:
    path: "{{ aurora_log_dir }}/{{ aurora_cluster_name }}"
    state: directory
  tags:
    - aurora

- name: Ensure that the Aurora lib directory exists
  file:
    path: "{{ aurora_lib_dir }}/{{ aurora_version }}"
    state: directory
  tags:
    - aurora

- name: Download Aurora scheduler
  get_url:
    url: "{{ aurora_mirror_base }}/{{ aurora_version }}/aurora-scheduler-{{ aurora_version }}.zip"
    dest: "{{ aurora_lib_dir }}/{{ aurora_version }}/aurora.zip"
  register: aurora_download
  tags:
    - aurora

- name: Unzip Aurora archive
  unarchive:
    src: "{{ aurora_lib_dir }}/{{ aurora_version }}/aurora.zip"
    dest: "{{ aurora_lib_dir }}/{{ aurora_version }}"
  when: aurora_download.changed
  tags:
    - aurora

- name: Template Aurora scheduler daemon control script
  template:
    src: aurora-control.sh.j2
    dest: "{{ aurora_bin_dir }}/aurora-{{ safe_aurora_cluster_name }}"
  tags:
    - aurora

- name: Setup a site-specific Aurora Monit configuration
  template:
    src: aurora.monit.j2
    dest: "/etc/monit.d/aurora-scheduler"
  notify:
    - Reload Monit
  tags:
    - aurora
